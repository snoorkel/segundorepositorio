package runner;

import org.junit.runner.RunWith;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;

import conexoes.DriversFactory;
import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import io.cucumber.junit.CucumberOptions.SnippetType;

@RunWith(Cucumber.class)
@CucumberOptions(
		
		features = "src/test/resources/features",
		glue = "steps", 
		tags="@teste",
		monochrome=true,
		dryRun = false,
		plugin= {"pretty","html:target/cucumber-report;html"},
		snippets = SnippetType.CAMELCASE
		)


public class Executa extends DriversFactory {

	public static void abrirNavegador() {
	String url="https:/demoqa.com/";
    String navegador ="Chrome"; //altere entre Chrome ou Firefox
	boolean headless = false; //true navegador oculto, false navador normal
	  if (navegador.equalsIgnoreCase("Chrome")) {
	System.setProperty("webdriver.chrome.driver", "./Drivers/chromedriver.exe");	
	ChromeOptions options = new ChromeOptions();
	if (headless) {
		options.addArguments("--headless");
		options.addArguments("--disable-gpu");
		options.addArguments("--window-size=1400,800");
	}  
	driver = new ChromeDriver(options);
	
	  }else if(navegador.equalsIgnoreCase("Firefox")){
	System.setProperty("webdriver.gecko.driver","./Drivers/geckodriver.exe" );
	FirefoxOptions options = new FirefoxOptions();
	if(headless) {
		options.addArguments("--headless");
		options.addArguments("--disable-gpu");
		options.addArguments("--window-size=1400,800");
	}
	
	driver= new FirefoxDriver(options);
	
}else{
	System.out.println("\r\n"
			+ "     _ _       _ _          __ _           __                                _                              \r\n"
			+ "  __| (_) __ _(_) |_ ___   / _(_)_ __ ___ / _| _____  __   ___  _   _    ___| |__  _ __ ___  _ __ ___   ___ \r\n"
			+ " / _` | |/ _` | | __/ _ \\ | |_| | '__/ _ \\ |_ / _ \\ \\/ /  / _ \\| | | |  / __| '_ \\| '__/ _ \\| '_ ` _ \\ / _ \\\r\n"
			+ "| (_| | | (_| | | ||  __/ |  _| | | |  __/  _| (_) >  <  | (_) | |_| | | (__| | | | | | (_) | | | | | |  __/\r\n"
			+ " \\__,_|_|\\__, |_|\\__\\___| |_| |_|_|  \\___|_|  \\___/_/\\_\\  \\___/ \\__,_|  \\___|_| |_|_|  \\___/|_| |_| |_|\\___|\r\n"
			+ "         |___/                                                                                              \r\n"
			+ "");
}
driver.get(url);
	driver.manage().window().maximize();
	}
public static void fecharNavegador() {
	
}
}

