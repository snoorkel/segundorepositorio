package metodos;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import conexoes.DriversFactory;

public class Metodos extends DriversFactory {

	
	public void clicar(By elemento) {
	driver.findElement(elemento).click();	
		
	}
	public void clicar(String atributo,String texto) {
		driver.findElement(By.xpath("//"+atributo+"[text()='"+texto+"']")).click();
	}
	public void scroll(int n1, int n2) {
		JavascriptExecutor js= (JavascriptExecutor) driver;
	js.executeScript("window.scrollBy("+n1+","+n2+")" );
	}
	public void escrever(By elemento, String texto) {
	driver.findElement(elemento).sendKeys(texto);	
	}

	/**
	 * Valida se o texto capturado contém o texto esperado passando um By
	 * @param elemento
	 * @param textoEsperado
	 */
	public void validarTexto(By elemento,String textoEsperado) {
	String textoCapturado= driver.findElement(elemento).getText();
assertTrue(textoCapturado.contains(textoEsperado));
}
/**tirar uma evidênc
 * @param nomeEvidencia
 * @throws IOException
 */

public void screenShot(String nomeEvidencia) throws IOException {
	TakesScreenshot srcShot = (TakesScreenshot) driver;
  File srcFile=srcShot.getScreenshotAs(OutputType.FILE);
  File destFile =new File("./evidencias/"+nomeEvidencia+".png");
FileUtils.copyFile(srcFile,destFile);
}
}
